

[구현] 게임 개발(힌트를 조금 받고 품)
- 단원 명과 같이 특별한 알고리즘 없이 요구하는 내용을 성실히 구현하기만 하면 된다.
  따라서 문제를 잘 읽고 어떠한 경우들이 발생할 수 있는지를 나누어 꼼꼼히 생각해본다.
- 방문여부와 바다인 경우는 다른 경우다.
- 어떠한 사이클이 반복되는지 생각하고, 반복문을 활용한다.
- 앞으로 이동시키기 전에 이동칸을 예측하는 변수를 사용한다. 
  그 변수가 범위 내에 있다면 진행시키고 범위를 벗어난다면 다시 왼쪽으로 회전시킨다.
- 회전이 몇 회 일어났는지 세어 4방향을 모두 확인하면 뒤로 이동, 또는 종료시킨다.



[정렬] 성적이 낮은 순서로 학생 출력하기
- 정렬 함수 사용
- 키(key)를 활용하여 정렬



[다이나믹] 개미전사(힌트를 조금 받고 품)
- 보텀업 사용
- 1번째 식량창고를 턴다면? 2번째 식량창고를 턴다면?
- 앞의 1로만들기 문제와 매우 유사
- max함수를 통해서 자기 자신이 포함된 경우와 자기 자신이 포함되지 않는 경우를 비교



[그래프] 도시 분할 계획(답을 완전 참고하여 품)
- 앞선 문제처럼 두 노드를 연결하는 함수와 부모노드를 찾는 함수를 만든다
- 간선에 대한 정보를 하나로 묶어서 가진다.(리스트)
- 간선을 비용순으로 정렬해서 비용이 작은 것부터 하나씩 확인한다
- 사이클이 발생하면 안된다.(부모노드가 같아서 서로 순환되는 경우)
